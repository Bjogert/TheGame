# tasks.yaml - execution queue for coding agents
# States: backlog | in_progress | blocked | done

- id: S0.1a
  title: "Confirm toolchain & baseline run"
  state: done
  deps: []
  deliverables:
    - "Toolchain report recorded in ai_memory (rustup show output, component status)"
    - "`cargo fmt`, `cargo clippy -- -D warnings`, and `cargo check --all-targets` succeed"
    - "`cargo run` launches without errors (close window manually when testing locally)"
  docs_update:
    - ".agent/ai_memory.V.1.yaml"
    - "TASK.md"
  notes:
    - "Active toolchain rustc 1.90.0 (stable); rustfmt and clippy installed via rustup component add."
    - "CLI `cargo run` call times out if the Bevy window is not closed; wgpu emits expected validation-layer warnings."

- id: S0.1b
  title: "Introduce CorePlugin & SimulationClock"
  state: done
  deps: [S0.1a]
  deliverables:
    - "`src/core/plugin.rs` with CorePlugin and SimulationClock resource"
    - "`src/main.rs` updated to register CorePlugin"
    - "Decision captured on whether Bevy Time<Virtual> is sufficient"
  docs_update:
    - "src/core/README.md"
    - "CHANGELOG.md"
    - ".agent/ai_memory.V.1.yaml"
    - "TASK.md"
  notes:
    - "SimulationClock wraps Bevy Time for scaled deltas; keep setter for future config with allow(dead_code) outside tests."
    - "Startup logging confirms configured time scale; unit tests cover scaling and clamping behaviour."

- id: S0.1c
  title: "Add core_debug feature & logging system"
  state: done
  deps: [S0.1b]
  deliverables:
    - "Feature flag `core_debug` defined in Cargo.toml"
    - "Log-once-per-second system gated behind the feature"
    - "VS Code tasks exposing the feature toggle"
  docs_update:
    - "src/core/README.md"
    - "CHANGELOG.md"
    - ".agent/ai_memory.V.1.yaml"
    - "TASK.md"
  notes:
    - "core_debug feature adds repeating timer logging sim elapsed, real/virtual deltas, and scale."
    - "VS Code tasks updated to pass `-- -D warnings` to clippy and expose feature toggles."

- id: S0.2a
  title: "Bootstrap world shell"
  state: done
  deps: [S0.1c]
  deliverables:
    - "`src/world/` modules scaffolded with WorldPlugin"
    - "Ground plane, directional light, and basic camera controller in place"
    - "Assets/config decisions recorded"
  docs_update:
    - "src/world/README.md"
    - ".agent/ai_memory.V.1.yaml"
    - "TASK.md"
  notes:
    - "WorldPlugin spawns plane, light, and fly camera (WASD + Space/LShift, right-mouse look)."
    - "Documentation appended to src/world/README.md; CHANGELOG updated."

- id: S0.2b
  title: "Wire WorldClock & configurable day/night cycle"
  state: done
  deps: [S0.2a]
  deliverables:
    - "WorldClock resource integrated with SimulationClock"
    - "/config/time.toml added and loaded at startup"
    - "Systems reacting to config values for pacing"
  docs_update:
    - "docs/tech_notes.md"
    - "src/world/README.md"
    - "TASK.md"
  notes:
    - "WorldTimeSettings loads from config/time.toml; WorldClock drives sun rotation and ambient lighting."
    - "Cursor grab now leverages CursorOptions for Bevy 0.17 API compliance."

- id: S0.3a
  title: "Docs & automation sweep for milestone S0"
  state: done
  deps: [S0.2b]
  deliverables:
    - "README.md, docs/tech_notes.md, .agent/docs/arch.md refreshed"
    - "CHANGELOG entry for milestone S0"
    - ".agent/tasks.yaml and .agent/ai_memory.V.1.yaml brought current"
  docs_update:
    - "README.md"
    - "docs/tech_notes.md"
    - ".agent/docs/arch.md"
    - ".agent/ai_memory.V.1.yaml"
    - "TASK.md"
  notes:
    - "Documentation sweep captured world time guidance and refreshed architecture snapshot."
    - "Planning artifacts now point to S1.1a as the next active step."

- id: S1.1a
  title: "NPC identity component & debug spawner"
  state: done
  deps: [S0.3a]
  deliverables:
    - "Identity component with placeholder fields"
    - "Spawner creating two debug NPCs (primitive meshes)"
    - "NpcPlugin module documented"
  docs_update:
    - "src/npc/README.md"
    - "CHANGELOG.md"
    - "TASK.md"
  notes:
    - "NpcPlugin spawns three capsule NPCs with unique Identity data."
    - "NpcIdGenerator issues monotonic IDs for future persistence."

- id: S1.1b
  title: "NPC schedule scaffold & integration tests"
  state: done
  deps: [S1.1a]
  deliverables:
    - "Basic schedule system stub (daily tick placeholder)"
    - "Integration test or debug assertion verifying NPC registration"
    - "Follow-up risks recorded in ai_memory"
  docs_update:
    - "src/npc/README.md"
    - ".agent/ai_memory.V.1.yaml"
    - "TASK.md"
  notes:
    - "ScheduleTicker accumulates simulation time and drives tick_schedule_state."

- id: S1.2
  title: "Dialogue scaffolding research"
  state: done
  deps: [S1.1b]
  deliverables:
    - "Document API options + rate limiting strategy"
    - "Draft prompt template approach"
  docs_update:
    - "docs/tech_notes.md"
    - ".agent/ai_memory.V.1.yaml"
  notes:
    - "Research documented in docs/dialogue_research.md; README/tech notes updated."

- id: S1.3
  title: "Dialogue broker prototype"
  state: done
  deps: [S1.2]
  deliverables:
    - "Implement DialogueBroker trait + provider enum"
    - "Stub request queue with rate limiting"
    - "Surface context-aware errors and response events"
  docs_update:
    - "docs/tech_notes.md"
    - ".agent/ai_memory.V.1.yaml"
    - "CHANGELOG.md"
    - "TASK.md"
  notes:
    - "DialoguePlugin registers queue resources, LocalDialogueBroker, and rate limiting systems."
    - "Requests carry structured context (trade descriptors, schedule notes) and emit response/failure events."

- id: S1.4
  title: "Config-driven micro trade planner"
  state: done
  deps: [S1.3]
  deliverables:
    - "Load recipes and daily requests from config/economy.toml via EconomyRegistry"
    - "Planner creates per-profession ActorTask queues (WaitForGood/Manufacture/Deliver)"
    - "advance_actor_tasks executes queues, waits for partners, and emits TradeCompletedEvent + dialogue prompts"
  docs_update:
    - "docs/tech_notes.md"
    - "docs/plan_overview.md"
    - "CHANGELOG.md"
    - "TASK.md"
  notes:
    - "Villagers now wait at crates, manufacture goods, and deliver them using data-driven plans. Placeholder meshes stay in sync with inventory."
    - ".agent/ai_memory.V.1.yaml"
    - "EconomyPlugin schedules trades after the world clock ticks, logging production/processing/exchange steps."
    - "Trade exchanges enqueue dialogue prompts so NPC chatter reflects the daily loop."

- id: S1.5
  title: "Economy foundation blueprint"
  state: done
  deps: [S1.4]
  deliverables:
    - "Document data-driven economy plan covering professions, recipes, and inventories"
    - "Identify work order pipeline and event taxonomy updates"
    - "Capture risks/open questions for Step 7"
  docs_update:
    - "docs/economy_blueprint.md"
    - "docs/tech_notes.md"
    - "docs/plan_overview.md"
    - "CHANGELOG.md"
    - "TASK.md"
    - ".agent/ai_memory.V.1.yaml"
  notes:
    - "Blueprint outlines EconomyRegistry, WorkOrderQueue, and expanded events feeding dialogue/UI."
    - "Risks called out for config sprawl and schedule integration; mitigations drafted."
    - "Upcoming work includes a profession/resource dependency matrix so trade relationships stay readable as new jobs arrive."

- id: S1.6
  title: "NPC locomotion & profession crates"
  state: done
  deps: [S1.5]
  deliverables:
    - "Profession crate entities spawned for farmer, miller, and blacksmith"
    - "Micro trade loop assigns crate destinations before processing work orders"
    - "NpcLocomotion component/system moves villagers toward their targets"
    - "Movement telemetry logged on travel start and arrival"
  docs_update:
    - "TASK.md"
    - "AGENT.md"
    - "src/npc/README.md"
    - "src/economy/README.md"
    - "docs/tech_notes.md"
  notes:
    - "Trade loop now pauses until all professions reach their crates, providing visible build-up to exchanges."
    - "Locomotion entries capture destination labels for future UI surfacing."

- id: S1.7
  title: "NPC motivation & wellbeing spike"
  state: done
  deps: [S1.6]
  deliverables:
    - "Dopamine-style motivation resource per NPC with decay and reward hooks"
    - "Mood thresholds mapped to behaviour, dialogue, and production modifiers"
    - "Alcohol coping effect modelled with quality penalties and post-binge crashes"
    - "Motivation inputs linked to the economy dependency matrix"
  docs_update:
    - "docs/tech_notes.md"
    - "BigPicturePlan.md"
    - "docs/plan_overview.md"
    - "TASK.md"
    - "README.md"
    - ".agent/ai_memory.V.1.yaml"
  notes:
    - "NpcMotivation component plus config-driven tuning rewards work, dialogue, and leisure while hooking into the economy dependency matrix after the world day advances."
    - "Alcohol boosts feed into hangover penalties and reduced task rewards; leisure no longer fakes food access and daily dependency snapshots only satisfy categories backed by matching goods."

- id: S1.8
  title: "Dialogue telemetry persistence"
  state: done
  deps: [S1.7]
  deliverables:
    - "DialogueTelemetryLog resource mirrors the in-memory telemetry buffer to disk"
    - "logs/dialogue_history.jsonl accumulates JSONL entries for responses and failures"
    - "Documentation and planning artifacts updated with log usage and revised backlog"
  docs_update:
    - "README.md"
    - "docs/tech_notes.md"
    - "src/dialogue/README.md"
    - "CHANGELOG.md"
    - "TASK.md"
    - "BigPicturePlan.md"
    - "docs/plan_overview.md"
    - ".agent/ai_memory.V.1.yaml"
  notes:
    - "Telemetry persistence runs immediately after queue processing so the JSONL log matches UI-visible history."
    - "logs/ is ignored from version control to prevent accidental commits of local dialogue history."
